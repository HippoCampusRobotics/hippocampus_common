<launch>
    <arg name="vehicle_name" />
    <arg name="vehicle_type" default="hippocampus" />

    <!-- tag poses in tank/pool -->
    <arg name="use_pool" default="false" />
    <arg if="$(arg use_pool)" name="tag_poses_file" value="$(find mu_auv_localization)/config/tag_poses.yaml" />
    <arg unless="$(arg use_pool)" name="tag_poses_file" value="$(find mu_auv_localization)/config/tag_poses_pool.yaml" />

    <!-- known tags and sizes for AprilTag algorithm -->
    <arg if="$(arg use_pool)" name="tag_file" value="$(find mu_auv_localization)/config/tags_standalone_pool.yaml" />
    <arg unless="$(arg use_pool)" name="tag_file" value="$(find mu_auv_localization)/config/tags_standalone.yaml" />
    
    <!-- camera/image processing specific-->
    <arg name="camera_name" default="vertical_camera" />
    <arg name="do_rectify" default="true" />
    <arg name="image_raw_topic" default="image_raw" />
    <arg name="image_rect_topic" default="image_rect" />

    <!-- EKF specific -->
    <arg name="process_model" default="simple" />
    <!-- "simple": new state = old state -->
    <!-- "velocities": simple point mass model using velocities to propagate old state -->

    <group ns="$(arg vehicle_name)">
        <param name="vehicle_name" value="$(arg vehicle_name)" />
        <param name="vehicle_type" value="$(arg vehicle_type)" />

        <include file="$(find hippocampus_common)/launch/node_tf_publisher.launch" pass_all_args="true" />

        <include file="$(find mu_auv_localization)/launch/inc_localization.launch" pass_all_args="true" />

        <!-- convert orientation from quaternion to roll, pitch, yaw -->
        <include file="$(find hippocampus_common)/launch/inc_quat_to_rpy.launch" />

    </group>
</launch>
