#!/usr/bin/env python
import rospy
from hippocampus_common.node import Node
from geometry_msgs.msg import PoseStamped, PoseWithCovarianceStamped, Vector3Stamped
import tf.transformations


class PoseToRpyNode(Node):
    def __init__(self, name):
        """Subscribes to PoseStamped messages of the topic `pose` and converts
        the orientation from quaternion to roll-pitch-yaw angles and publishes
        it in a Vector3Stamped message under the `rpy` topic.

        Args:
            name (str): Name of the node. Must be unique.
        """
        super(PoseToRpyNode, self).__init__(name=name)
        self.pose_msg_type = self.get_param("~pose_msg_type")
        self.pub = rospy.Publisher("rpy", Vector3Stamped, queue_size=10)
        if self.pose_msg_type == "PoseStamped":
            self.sub = rospy.Subscriber("pose",
                                        PoseStamped,
                                        self.on_pose,
                                        queue_size=10)
        elif self.pose_msg_type == "PoseWithCovarianceStamped":
            self.sub = rospy.Subscriber("pose",
                                        PoseWithCovarianceStamped,
                                        self.on_pose,
                                        queue_size=10)
        else:
            rospy.logerr("[%s] Pose msg type defined does not exist.",
                         rospy.get_name())

    def on_pose(self, msg):
        rpy = Vector3Stamped()
        rpy.header.stamp = msg.header.stamp
        rpy.header.frame_id = msg.header.frame_id
        if self.pose_msg_type == "PoseStamped":
            q_ros = msg.pose.orientation
        else:
            q_ros = msg.pose.pose.orientation
        q = [q_ros.x, q_ros.y, q_ros.z, q_ros.w]
        euler = tf.transformations.euler_from_quaternion(q)
        rpy.vector.x = euler[0]
        rpy.vector.y = euler[1]
        rpy.vector.z = euler[2]
        self.pub.publish(rpy)


def main():
    node = PoseToRpyNode("pose_to_rpy")
    node.run()


if __name__ == "__main__":
    main()
